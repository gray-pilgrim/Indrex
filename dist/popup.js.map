{"version":3,"file":"popup.js","mappingslBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack://chrome_ext/./src/popup/popup.tsx","webpack://chrome_ext/webpack/bootstrap","webpack://chrome_ext/webpack/runtime/chunk loaded","webpack://chrome_ext/webpack/runtime/compat get default export","webpack://chrome_ext/webpack/runtime/define property getters","webpack://chrome_ext/webpack/runtime/global","webpack://chrome_ext/webpack/runtime/hasOwnProperty shorthand","webpack://chrome_ext/webpack/runtime/make namespace object","webpack://chrome_ext/webpack/runtime/node module decorator","webpack://chrome_ext/webpack/runtime/publicPath","webpack://chrome_ext/webpack/runtime/jsonp chunk loading","webpack://chrome_ext/webpack/runtime/nonce","webpack://chrome_ext/webpack/before-startup","webpack://chrome_ext/webpack/startup","webpack://chrome_ext/webpack/after-startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport '../assets/tailwind.css';\n// Icons for recording options\nimport screenCamIcon from '../assets/Banner.png';\nimport screenOnlyIcon from '../assets/Banner.png';\nimport camOnlyIcon from '../assets/Banner.png';\nconst Popup = () => {\n    const [currentUrl, setCurrentUrl] = useState('');\n    // States for disability and recording options\n    const [disabilitySelection, setDisabilitySelection] = useState('');\n    const [recordingSelection, setRecordingSelection] = useState('cam-only');\n    const [recordingIcon, setRecordingIcon] = useState(screenCamIcon);\n    // States for the review form\n    const [name, setName] = useState('');\n    const [review, setReview] = useState('');\n    const [reviews, setReviews] = useState([]); // State to hold the list of reviews\n    const [htmlContent, setHtmlContent] = useState('');\n    // Load reviews from chrome.storage when the component mounts\n    useEffect(() => {\n        // Listen for messages from the content script\n        // Fetch reviews from storage\n        chrome.storage.sync.get(['reviews']).then((result) => {\n            if (result.reviews) {\n                setReviews(result.reviews);\n            }\n        });\n        chrome.runtime.onMessage.addListener((message) => {\n            if (message.html) {\n                setHtmlContent(message.html);\n            }\n        });\n        chrome.runtime.onMessage.addListener((message) => {\n            if (message.html) {\n                fetch('http://localhost:5000/receive_html', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ htmlContent: message.html, disabilityType: message.disabilityType })\n                })\n                    .then(response => response.text())\n                    .then(data => {\n                    console.log('Server Response:', data);\n                })\n                    .catch(error => console.error('Error:', error));\n            }\n        });\n        // Trigger the content script to send HTML when the popup is opened\n        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n            chrome.scripting.executeScript({\n                target: { tabId: tabs[0].id },\n                files: ['contentScript.js']\n            });\n        });\n    }, []);\n    // Handlers for disability and recording options\n    const handleDisabilitySelectionChange = (event) => {\n        setDisabilitySelection(event.target.value);\n    };\n    const handleRecordingSelectionChange = (event) => {\n        setRecordingSelection(event.target.value);\n        switch (event.target.value) {\n            case 'screen-cam':\n                setRecordingIcon(screenCamIcon);\n                break;\n            case 'screen-only':\n                setRecordingIcon(screenOnlyIcon);\n                break;\n            case 'cam-only':\n                setRecordingIcon(camOnlyIcon);\n                break;\n            default:\n                setRecordingIcon(null); // or a default icon\n        }\n    };\n    const startRecording = () => {\n        console.log('Recording option selected:', recordingSelection);\n        console.log('Disability Type:', disabilitySelection);\n        // Send a message to the active tab to fetch HTML content along with the disability type\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n            chrome.tabs.sendMessage(tabs[0].id, { action: \"fetchHTML\", disabilityType: disabilitySelection });\n        });\n    };\n    // Function to handle review form submission\n    const submitReview = (event) => {\n        event.preventDefault();\n        const newReview = { name, review };\n        const updatedReviews = [...reviews, newReview];\n        // Save the updated reviews array to chrome.storage\n        chrome.storage.sync.set({ reviews: updatedReviews }).then(() => {\n            console.log('Review submitted:', newReview);\n            setReviews(updatedReviews); // Update state with new review\n        });\n        // Reset form fields\n        setName('');\n        setReview('');\n    };\n    return (React.createElement(\"div\", { className: \"p-4\" },\n        React.createElement(\"h1\", { className: \"text-5xl text-green-500 mb-4\" }, \"The Great Extension\"),\n        React.createElement(\"div\", { className: \"mb-4\" },\n            React.createElement(\"input\", { type: \"text\", value: disabilitySelection, onChange: (e) => setDisabilitySelection(e.target.value), className: \"border border-gray-300 rounded p-2\", placeholder: \"Enter disability type\" })),\n        React.createElement(\"div\", { className: \"mb-4 flex items-center\" },\n            React.createElement(\"select\", { value: recordingSelection, onChange: handleRecordingSelectionChange, className: \"border border-gray-300 rounded p-2\" },\n                React.createElement(\"option\", { value: \"screen-cam\" }, \"Analyse and Suggest\"),\n                React.createElement(\"option\", { value: \"screen-only\" }, \"Analyse only\"),\n                React.createElement(\"option\", { value: \"cam-only\" }, \"Suggest only\")),\n            recordingIcon && React.createElement(\"img\", { src: recordingIcon, alt: \"Recording option icon\", className: \"ml-2\" })),\n        React.createElement(\"button\", { onClick: startRecording, className: \"bg-red-500 text-white px-4 py-2 rounded\" }, \"Start recording\"),\n        React.createElement(\"head\", null,\n            React.createElement(\"title\", null, \"Extracted HTML\")),\n        React.createElement(\"body\", null,\n            React.createElement(\"h1\", null, \"Extracted HTML:\"),\n            React.createElement(\"textarea\", { id: \"htmlContent\" }),\n            React.createElement(\"h2\", null, \"Server Response:\"),\n            React.createElement(\"div\", { id: \"serverResponse\" }),\n            React.createElement(\"script\", { src: \"popup.js\" })),\n        React.createElement(\"div\", { className: \"review-section h-40 overflow-auto border border-gray-300 p-2 my-4\" }, reviews.map((review, index) => (React.createElement(\"div\", { key: index, className: \"review mb-2\" },\n            React.createElement(\"h5\", { className: \"font-bold\" }, review.name),\n            React.createElement(\"p\", null, review.review))))),\n        React.createElement(\"form\", { onSubmit: submitReview, className: \"mb-4\" },\n            React.createElement(\"input\", { type: \"text\", value: name, onChange: (e) => setName(e.target.value), placeholder: \"Your name\", className: \"border border-gray-300 rounded p-2 w-full mb-2\" }),\n            React.createElement(\"textarea\", { value: review, onChange: (e) => setReview(e.target.value), placeholder: \"Your review\", className: \"border border-gray-300 rounded p-2 w-full mb-2\" }),\n            React.createElement(\"button\", { type: \"submit\", className: \"bg-blue-500 text-white px-4 py-2 rounded\" }, \"Submit Review\"))));\n};\nconst container = document.createElement('div');\ndocument.body.appendChild(container);\nconst root = createRoot(container);\nroot.render(React.createElement(Popup, null));\nexport default Popup;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"popup\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchrome_ext\"] = self[\"webpackChunkchrome_ext\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_react-dom_client_js\",\"src_assets_tailwind_css\"], () => (__webpack_require__(\"./src/popup/popup.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}